---
source: src/parser/expression.rs
expression: "parse_expr_no_seq(\"test() ? function () { return 0; } : function() { return 1; }, y\".into()).unwrap().1"
---
{
  "type": "ConditionalExpression",
  "test": {
    "type": "CallExpression",
    "callee": {
      "type": "Identifier",
      "name": "test",
      "start": 0,
      "end": 4
    },
    "arguments": [],
    "start": 0,
    "end": 6
  },
  "consequent": {
    "type": "FunctionExpression",
    "id": null,
    "params": [],
    "body": {
      "type": "BlockStatement",
      "body": [
        {
          "type": "ReturnStatement",
          "argument": {
            "type": "Literal",
            "value": 0.0,
            "start": 30,
            "end": 31
          },
          "start": 23,
          "end": 32
        }
      ],
      "start": 21,
      "end": 34
    },
    "async": false,
    "start": 9,
    "end": 34
  },
  "alternate": {
    "type": "FunctionExpression",
    "id": null,
    "params": [],
    "body": {
      "type": "BlockStatement",
      "body": [
        {
          "type": "ReturnStatement",
          "argument": {
            "type": "Literal",
            "value": 1.0,
            "start": 57,
            "end": 58
          },
          "start": 50,
          "end": 59
        }
      ],
      "start": 48,
      "end": 61
    },
    "async": false,
    "start": 37,
    "end": 61
  },
  "start": 0,
  "end": 61
}
