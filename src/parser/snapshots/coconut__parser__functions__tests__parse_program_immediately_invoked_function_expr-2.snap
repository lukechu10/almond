---
source: src/parser/functions.rs
expression: "parse_program(r#\"(function (global, factory) {\n                    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n                        typeof define === 'function' && define.amd ? define(['exports'], factory) :\n                            (global = global || self, factory(global.Library = {}));\n                }(this, (function (exports) {})));\"#.into()).unwrap().1"
---
{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "global",
              "start": 11,
              "end": 17
            },
            {
              "type": "Identifier",
              "name": "factory",
              "start": 19,
              "end": 26
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "typeof",
                        "prefix": true,
                        "argument": {
                          "type": "Identifier",
                          "name": "exports",
                          "start": 57,
                          "end": 64
                        },
                        "start": 50,
                        "end": 65
                      },
                      "right": {
                        "type": "Literal",
                        "value": "object",
                        "start": 69,
                        "end": 77
                      },
                      "start": 50,
                      "end": 77
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "!==",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "typeof",
                        "prefix": true,
                        "argument": {
                          "type": "Identifier",
                          "name": "module",
                          "start": 88,
                          "end": 94
                        },
                        "start": 81,
                        "end": 95
                      },
                      "right": {
                        "type": "Literal",
                        "value": "undefined",
                        "start": 99,
                        "end": 110
                      },
                      "start": 81,
                      "end": 110
                    },
                    "start": 50,
                    "end": 110
                  },
                  "consequent": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "factory",
                      "start": 113,
                      "end": 120
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "exports",
                        "start": 121,
                        "end": 128
                      }
                    ],
                    "start": 113,
                    "end": 129
                  },
                  "alternate": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "prefix": true,
                          "argument": {
                            "type": "Identifier",
                            "name": "define",
                            "start": 163,
                            "end": 169
                          },
                          "start": 156,
                          "end": 170
                        },
                        "right": {
                          "type": "Literal",
                          "value": "function",
                          "start": 174,
                          "end": 184
                        },
                        "start": 156,
                        "end": 184
                      },
                      "right": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "define",
                          "start": 188,
                          "end": 194
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "amd",
                          "start": 195,
                          "end": 198
                        },
                        "computed": false,
                        "start": 188,
                        "end": 198
                      },
                      "start": 156,
                      "end": 198
                    },
                    "consequent": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "define",
                        "start": 201,
                        "end": 207
                      },
                      "arguments": [
                        {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": "exports",
                              "start": 209,
                              "end": 218
                            }
                          ],
                          "start": 208,
                          "end": 219
                        },
                        {
                          "type": "Identifier",
                          "name": "factory",
                          "start": 221,
                          "end": 228
                        }
                      ],
                      "start": 201,
                      "end": 229
                    },
                    "alternate": {
                      "type": "SequenceExpression",
                      "expressions": [
                        {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "global",
                            "start": 261,
                            "end": 267
                          },
                          "right": {
                            "type": "LogicalExpression",
                            "operator": "||",
                            "left": {
                              "type": "Identifier",
                              "name": "global",
                              "start": 270,
                              "end": 276
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "self",
                              "start": 280,
                              "end": 284
                            },
                            "start": 270,
                            "end": 284
                          },
                          "start": 261,
                          "end": 284
                        },
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "factory",
                            "start": 286,
                            "end": 293
                          },
                          "arguments": [
                            {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "object": {
                                  "type": "Identifier",
                                  "name": "global",
                                  "start": 294,
                                  "end": 300
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "Library",
                                  "start": 301,
                                  "end": 308
                                },
                                "computed": false,
                                "start": 294,
                                "end": 308
                              },
                              "right": {
                                "type": "ObjectExpression",
                                "properties": [],
                                "start": 311,
                                "end": 313
                              },
                              "start": 294,
                              "end": 313
                            }
                          ],
                          "start": 286,
                          "end": 314
                        }
                      ],
                      "start": 261,
                      "end": 314
                    },
                    "start": 156,
                    "end": 314
                  },
                  "start": 50,
                  "end": 314
                },
                "start": 50,
                "end": 316
              }
            ],
            "start": 28,
            "end": 334
          },
          "async": false,
          "start": 1,
          "end": 334
        },
        "arguments": [
          {
            "type": "ThisExpression",
            "start": 335,
            "end": 339
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "exports",
                "start": 352,
                "end": 359
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [],
              "start": 361,
              "end": 363
            },
            "async": false,
            "start": 342,
            "end": 363
          }
        ],
        "start": 1,
        "end": 365
      },
      "start": 0,
      "end": 367
    }
  ],
  "start": 0,
  "end": 367
}
